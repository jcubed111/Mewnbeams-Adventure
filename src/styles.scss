// ~10%
/*
Notes on this file:
- All class names (in css & js) get replaced in convert.py, but
  to identify them consistently, we prefix them with `C--`.
  This gets optimized out.
- Since we minify all class names in convert.py, we don't need to
  worry about making them too long. Therefore, we can get space
  savings from writing longer class names but _not_ nesting them.
  Ex:
    instead of: `.character .name`
    do: `.characterName`
  However, this makes the code pretty unreadable, so I add extra nesting
  sometimes just to keep things clean.
  Ex:
    .character{}
      .characterName{}
- There are also a bunch of cases where unrelated classes happen to need
  the same properties, and it's shorter to group them rather than repeart
  the property values in multiple places.
*/

// $grey-1: #ffffff;
// $grey-2: #d9d8da;
// $grey-3: #acaaad;
// $grey-4: #817e84;
$grey-5: #301b45;
$grey-6: #20122e;
$grey-7: #150e1d;

$clickable-outline: #8bd;
$clickable-outline-hover: #e8f;
$card-active-outline: #fff;
$clickable-disabled: $grey-5;
// a desaturated grey-6 so we don't match button bgs
$card-text-area-bg: #261e2e;
$card-back-border: #337;


$z-body-bg: 0;
$z-character: 5;
$z-fight-resources: 7;
$z-card-pile: 7;
$z-fight-ui-pass-button: 8;
$z-arrow-canvas: 9;

// card zs assigned 11+handIndex for hand
$z-card-hover: 24;
// card z assigned 25+pendingIndex for active
    $z-card-local-cost-icons: 1;
    $z-card-local-card-back: 2;

$z-minimap: 55;
$z-choice-menu-wrapper: 50;
$z-choice-menu-wrapper-black: 80;
    // local to choice menu, but shared with cards
    $z-choice-menu-wrapper-black-button: 60;

html{
    // define the font size as 1% of the view square
    font-size: min(0.075vw, 0.1vh);
    display: flex;
    align-items: center;
    justify-content: center;
    background: #000;
    image-rendering: pixelated;
    overflow: hidden;
}

body{
    background: $grey-7;
    font-family: 'Iowan Old Style', 'Palatino Linotype', P052, serif;
    width: 1333rem;
    height: 1000rem;
    overflow: hidden;
    font-size: 21rem;
    margin: 0;
    position: relative;
    color: #ddd;
    user-select: none;
    overflow: hidden;
    text-align: center;
}

i{
    color: #8bd;
}
b, .C--visitedPath{
    color: #f0a;
}
h1{
    font-size: 60rem;
    // need to override because this gets placed in a left-aligned div sometimes
    text-align: center;
}

*{
    box-sizing: border-box;
}

/* Fullscreen ux elements */
.C--arrowCanvas, .C--choiceMenuWrapper, .C--bodyBgWrapper{
    position: absolute;
    inset: 0;
}

.C--bodyBgWrapper{
    z-index: $z-body-bg;
    top: auto;
    transition: inset 0.75s ease-in-out;
}

.C--arrowCanvas{
    pointer-events: none;
    z-index: $z-arrow-canvas;
}

.C--choiceMenuWrapper{
    z-index: $z-choice-menu-wrapper;
    background: #0004;
    backdrop-filter: blur(20rem);
}
    .C--darkBlackMenuBack{
        background: #000b;
        z-index: $z-choice-menu-wrapper-black;  // place above deck button

        // Special positioning for the options & first button
        .C--choiceMenuOptions{
            justify-content: flex-start;
        }
        .C--buttonLike:first-child{
            position: absolute;
            inset: 100rem 100rem auto auto;
            z-index: $z-choice-menu-wrapper-black-button;
        }
    }

    .C--choiceMenu{
        padding: 115rem 80rem;
        max-height: 100%;
        overflow: auto;
        display: flex;
        flex-direction: column;
        align-items: stretch;
    }

    .C--choiceMenuBordered{
        padding: 50rem;
        background: $grey-7;
        border: 5rem solid $grey-5;
        position: absolute;
        inset: 120rem 200rem;
    }

    .C--choiceMenuOptions{
        margin-top: 50rem;
        flex-grow: 1;
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        gap: 50rem;
        justify-content: center;
        align-content: center;
        align-items: center;
    }

    .C--choiceMenuTitle .C--spriteSheetPic{
        flex: 0 0 250rem;
        width: 250rem;
        align-self: center;
    }
    .C--eventTextWithPic{
        display: flex;
        gap: 100rem;
        align-items: center;
        justify-content: space-between;
        text-align: left;
    }

.C--CardMultiReward{
    display: flex;
    flex-direction: row-reverse;
    padding-right: 80rem;
    &>div{
        margin-right: -80rem;
    }
}

/* card and character general props */
.C--card, .C--character{
    display: flex;
    flex-direction: column;
    position: absolute;
    margin: 0;
    transition:
        inset 0.4s ease-in-out,
        transform 0.4s ease-in-out,
        opacity 0.4s linear,
        margin 0.15s linear;  // used for character attack animation
}
.C--card.C--active{
    outline: 4rem solid $card-active-outline;
    transition:
        // don't animate inset while we're dragging the card
        transform 0.4s ease-out,
        opacity 0.4s linear;
}

.C--spriteSheetPic{
    width: 100%;
    aspect-ratio: 4 / 3;
    display: inline-block;
}
.C--doubleHeightSprite{
    aspect-ratio: 4 / 6;
}

/* card */
.C--card{
    width: 190rem;
    height: 285rem;
    border: 5rem solid #3338;
    background-origin: border-box!important;
    backdrop-filter: blur(10rem);  // for ghosted cards

    // z index ranges from 11-20, 24 for hover, 25 for draw & discard

    &:hover:not(.C--cantripped), &.C--active{
        transform: rotate(0deg)!important;
        z-index: $z-card-hover!important;
    }

    &.C--unplayable{
        filter: grayscale(50%);
        border-color: #666;
    }

    .C--actionPointIcon, .C--manaPointIcon{
        position: absolute;
        top: -2rem;
        left: -2rem;
        z-index: $z-card-local-cost-icons;
    }

    .C--manaPointIcon{
        top: 38rem;
    }
}

    .C--cardPile,
    .C--faceDown:before{
        background: repeating-linear-gradient(45deg, #113 0 10rem, #226 10rem 20rem);
    }
    .C--faceDown:before{
        content: '';
        position: absolute;
        inset: 0;
        z-index: $z-card-local-card-back;
    }

    .C--cardPile,
    .C--faceDown{
        border: 5rem solid $card-back-border;
    }
    .C--faceDown .C--actionPointIcon,
    .C--faceDown .C--manaPointIcon{
        display: none;
    }

    .C--cardName{
        padding: 5rem;
        color: #fff;
        background:
            linear-gradient(45deg, $card-text-area-bg 5%, #0000 5%),
            linear-gradient(315deg, $card-text-area-bg 5%, #0000 5%);
    }

    .C--cardText{
        display: flex;
        flex-direction: column;
        gap: 2rem;
        padding: 0 5rem;
        flex: 1 1 auto;
        font-size: 18rem;
        justify-content: center;
        text-wrap: balance;
        background: $card-text-area-bg;
        min-height: 0;
    }

.C--cardPile{
    position: absolute;
    width: 80rem;
    height: 120rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    font-size: 40rem;
    cursor: pointer;
    z-index: $z-card-pile;
    &:hover{
        outline: 4rem solid $clickable-outline;
    }
}
    .C--cardPileName{
        font-size: 15rem;
    }


.C--actionPointIcon, .C--manaPointIcon{
    width: 35rem;
    height: 35rem;
    font-weight: bold;
    padding: 2rem;
    position: relative;
    &:before{
        content: '';
        position: absolute;
        z-index: -1;
    }
}
    .C--actionPointIcon:before{
        inset: 0;
        background: #a08;
        outline: 2rem solid #804;
        transform: rotate(45deg);
    }

    .C--manaPointIcon:before{
        inset: -3rem;
        background: #08a;
        outline: 2rem solid #048;
        border-radius: 50%;
    }

/* characters */
.C--character{
    align-items: center;
    gap: 5rem;
    z-index: $z-character;
    padding: 10rem;
    border-radius: 40rem;
}

    .C--characterTargetable{
        outline: 5rem dotted #fff4;
        cursor: pointer;
        &:hover{
            outline: 5rem solid #fff8;
        }
    }
    .C--character .C--spriteSheetPic{
        border-radius: 0.1px;
        outline: 20rem solid $grey-7;
    }

    $pip-size: 18rem;
    .C--pipBar{
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: flex-start;
        max-width: $pip-size * 5 + 1rem;
        width: max-content;

        &.C--wide{
            max-width: $pip-size * 10 + 1rem;
        }
    }
        // hp chunks
        .C--hpChunk-full,
        .C--hpChunk-bleed,
        .C--hpChunk-empty,
        .C--hpChunk-pending,
        .C--dodgeChunk,
        .C--blockChunk{
            width: $pip-size;
            height: $pip-size;
            $outset: 25%;
            clip-path: polygon(
                50% 0% - $outset,
                100% + $outset 50%,
                50% 100% + $outset,
                0% - $outset 50%,
            );
        }
            .C--hpChunk-full{
                background: #ef2641;
            }
            .C--hpChunk-bleed{
                background: linear-gradient(#ef2641 30%, #4a0912 30% 70%, #ef2641 70%);
            }
            .C--playerCharacter .C--hpChunk-bleed{
                background: #1c0;
            }
            .C--hpChunk-pending{
                background: #ddd;
            }
            .C--hpChunk-empty{
                background: #52304f;
                transition: background 0.4s;
            }
            .C--blockChunk{
                background: #4c8ac0;
            }
            .C--dodgeChunk{
                background: linear-gradient(90deg, #4c8ac0 30%, #fff 30% 70%, #4c8ac0 70%);
            }

    .C--pendingAction{
        font-size: 26rem;

        .C--playerCharacter &{
            display: none;
        }
    }


.C--buttonLike {
    padding: 7rem 14rem;
    background: #113;
    // outline: 4rem solid $clickable-disabled;
    border: 5rem solid #449;
}

.C--buttonLike:not(.C--disabled),
.C--gettingCard .C--card:not(.C--unplayable),
.C--cardForceClickable {
    // the "click a card/button" state
    outline: 4rem solid $clickable-outline;
    cursor: pointer;

    &:hover{
        outline: 4rem solid $clickable-outline-hover;
    }
}

/* floating ui elements */
.C--passButton{
    position: absolute;
    right: 20rem;
    bottom: 310rem;
    z-index: $z-fight-ui-pass-button;
    // background: #424;
}

.C--resources{
    position: absolute;
    left: 27rem;
    bottom: 310rem;
    z-index: $z-fight-resources;
}
    .C--actionPointRow, .C--manaRow {
        margin-top: 15rem;
        display: flex;
        flex-direction: row;
        height: 35rem;

        &>div:before{
            box-shadow: 0 0 0 6rem #fffa;
        }
    }


// ADVANCED MINIMAP
// .C--minimap{
//     display: flex;
//     flex-direction: column-reverse;
//     align-items: center;
//     position: absolute;
//     inset: 40rem 20rem auto auto;
//     font-family: monospace;
//     white-space: pre;
//     font-size: 15rem;
//     color: #fff9;
//     z-index: $z-minimap;
// }
//     .C--minimapRow{
//         white-space: nowrap;
//     }

// .C--directionChoiceLabel{
//     font-size: 75%;
//     margin-bottom: 10rem;
//     width: 150rem;
// }


.C--minimap{
    display: flex;
    flex-direction: column-reverse;
    align-items: center;
    position: absolute;
    inset: 40rem 40rem auto auto;
    font-family: monospace;
    white-space: pre;
    font-size: 15rem;
    color: #aaa;
    z-index: $z-minimap;
    gap: 1rem;
}
.C--mapArrow{
    opacity: 0.5;
}
