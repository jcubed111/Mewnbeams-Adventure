/*
Notes on this file:
- All class names (in css & js) get replaced in convert.py, but
  to identify them consistently, we prefix them with `C--`.
  This gets optimized out.
- Since we minify all class names in convert.py, we don't need to
  worry about making them too long. Therefore, we can get space
  savings from writing longer class names but _not_ nesting them.
  Ex:
    instead of: `.character .name`
    do: `.characterName`
  However, this makes the code pretty unreadable, so I add extra nesting
  sometimes just to keep things clean.
  Ex:
    .character{}
      .characterName{}
- There are also a bunch of cases where unrelated classes happen to need
  the same properties, and it's shorter to group them rather than repeart
  the property values in multiple places.
*/

html{
    // define the font size as 1% of the view square
    font-size: min(0.075vw, 0.1vh);
    display: flex;
    align-items: center;
    justify-content: center;
    background: #000;
}

body{
    background: #102;
    font-family: 'Iowan Old Style', 'Palatino Linotype', 'URW Palladio L', P052, serif;
    width: 1333rem;
    height: 1000rem;
    overflow: hidden;
    font-size: 21rem;
    margin: 0;
    // text-wrap: pretty;
    position: relative;
    color: #ddd;
    user-select: none;
}

*{
    box-sizing: border-box;
}

/* Fullscreen ux elements */
.C--arrowCanvas, .C--choiceMenuWrapper{
    position: absolute;
    inset: 0;
}

.C--arrowCanvas{
    pointer-events: none;
    z-index: 9;
}

.C--choiceMenuWrapper{
    z-index: 50;
    background: #0004;
    backdrop-filter: blur(20rem);
}
    .C--darkBlackMenuBack{
        background: #000b;
        z-index: 80;  // place above deck button

        // Special positioning for inner and the first option button
        .C--choiceMenu{
            padding: 115rem 80rem;
            height: 100%;
            overflow: auto;
        }
    }
    .C--darkBgButtonTop, .C--darkBgButtonBottom{
        // Special positioning for the first option button
        .C--choiceMenuOptionButton:first-child{
            position: absolute;
            inset: 100rem 100rem auto auto;
            z-index: 60;
        }
    }
    .C--darkBgButtonBottom .C--choiceMenuOptionButton:first-child{
        inset: auto 500rem 100rem;
    }

    // // this is the (maybe) bordered one
    .C--choiceMenu{
        padding: 50rem;
        display: flex;
        flex-direction: column;
        align-items: stretch;

        i{
            color: #8bd;
        }
        b{
            color: #f0a;
        }
        h1{
            font-size: 60rem;
        }
    }
        .C--choiceMenuBordered{
            background: #123;
            border: 5rem solid #469;
            position: absolute;
            inset: 150rem 216rem;
        }

    .C--choiceMenuTitle{
        margin-bottom: 50rem;
        line-height: 1.5;
    }
        .C--centeredTitle{
            text-align: center;
        }
        .C--leftTitle{
            text-align: left;
        }

    .C--choiceMenuOptions{
        display: flex;
        flex-wrap: wrap;
        gap: 50rem;
        justify-content: center;
        align-items: center;
        text-align: center;
    }
        .C--colOptions{
            flex-direction: column;
            &.C--leftOptions{
                align-items: flex-start;
            }
        }
        .C--rowOptions{
            flex-direction: row;
            &.C--leftOptions{
                justify-content: flex-start;
            }
        }

/* card and character general props */
.C--card, .C--character{
    text-align: center;
    display: flex;
    flex-direction: column;
    position: absolute;
    margin: 0;
    transition:
        inset 0.4s ease-in-out,
        transform 0.4s ease-in-out,
        opacity 0.4s linear,
        margin 0.15s linear;  // used for character attack animation
}
.C--card.C--active{
    box-shadow: 0 0 0 4rem #fff;
    // speed up the transition here
    transition:
        inset 0.1s linear,
        transform 0.4s ease-out,
        opacity 0.4s linear;
}

.C--spriteSheetPic{
    width: 100%;
    aspect-ratio: 4 / 3;
    image-rendering: pixelated;
}

/* card */
.C--card, .C--cardPile{
    background: #123;
    border: 5rem solid color-mix(in srgb, var(--c, #48f), #333);
}
.C--card{
    width: 190rem;
    height: 285rem;
    // z index ranges from 11-20, 24 for hover, 25 for draw & discard

    &:hover, &.C--active{
        transform: rotate(0deg)!important;
        z-index: 24!important;
    }

    &.C--unplayable{
        filter: grayscale(50%);
        border-color: #666;
    }

    .C--actionPointIcon, .C--manaPointIcon{
        position: absolute;
        top: -2rem;
        left: -2rem;
        z-index: 1;
    }

    .C--manaPointIcon{
        top: 38rem;
    }

    .C--spriteSheetPic{
        // prevents rounding errors from showing the adjacent sprite at the edges
        box-shadow: inset 0 0 0 1px #000;
    }
}

    .C--cardPile,
    .C--faceDown:before{
        background: repeating-linear-gradient(45deg, #123 0 10rem, #246 10rem 20rem);
    }
    .C--faceDown:before{
        content: '';
        position: absolute;
        inset: 0;
        z-index: 2;
    }

    .C--faceDown .C--actionPointIcon{
        display: none;
    }

    .C--cardName{
        padding: 5rem;
        color: #fff;
        background:
            linear-gradient(45deg, #123 5%, #0000 5%),
            linear-gradient(315deg, #123 5%, #0000 5%)
            var(--c);
    }

    .C--cardText{
        display: flex;
        flex-direction: column;
        gap: 2rem;
        padding: 5rem;
        flex: 1 1 auto;
        font-size: 18rem;
        justify-content: center;
        text-wrap: balance;
    }

.C--cardPile{
    position: absolute;
    width: 80rem;
    height: 120rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    font-size: 40rem;
    cursor: pointer;
    &:hover{
        box-shadow: 0 0 0 4rem #e8f;
    }
}
    .C--cardPileName{
        font-size: 15rem;
    }


.C--actionPointIcon, .C--manaPointIcon{
    width: 35rem;
    height: 35rem;
    font-weight: bold;
    padding: 2rem;
    position: relative;
    &:before{
        content: '';
        position: absolute;
        z-index: -1;
    }
}

.C--actionPointIcon:before{
    inset: 0;
    background: #a08;
    outline: 2rem solid #804;
    transform: rotate(45deg);
}

.C--manaPointIcon:before{
    inset: -3rem;
    background: #08a;
    outline: 2rem solid #048;
    border-radius: 50%;
}

/* characters */
.C--character{
    align-items: center;
    gap: 5rem;
}

    .C--characterTargetable{
        box-shadow: 0 0 15rem #fff8;
        cursor: pointer;
        &:hover{
            box-shadow: 0 0 15rem #fff;
        }
    }

    .C--pipBar{
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: flex-start;
        width: 101rem;

        &.C--wide{
            width: 201rem;
        }
    }
        // hp chunks
        .C--hpChunk-full,
        .C--hpChunk-bleed,
        .C--hpChunk-empty,
        .C--hpChunk-pending,
        .C--dodgeChunk,
        .C--blockChunk{
            width: 20rem;
            height: 20rem;
            $outset: 25%;
            clip-path: polygon(
                50% 0% - $outset,
                100% + $outset 50%,
                50% 100% + $outset,
                0% - $outset 50%,
            );
        }
            .C--hpChunk-full{
                background: #ef2641;
            }
            .C--hpChunk-bleed{
                background: linear-gradient(#ef2641 30%, #4a0912 30% 70%, #ef2641 70%);
            }
            .C--playerCharacter .C--hpChunk-bleed{
                background: #1c0;
            }
            .C--hpChunk-pending{
                background: #ddd;
            }
            .C--hpChunk-empty{
                background: #52304f;
                transition: background 0.4s;
            }
            .C--blockChunk{
                background: #4c8ac0;
            }
            .C--dodgeChunk{
                background: linear-gradient(90deg, #4c8ac0 30%, #fff 30% 70%, #4c8ac0 70%);
            }

    .C--pendingAction{
        font-size: 30rem;

        .C--playerCharacter &{
            display: none;
        }
    }


.C--buttonLike {
    padding: 7rem 14rem;
    background: #123;
    border: 5rem solid #469;
}

.C--buttonLike:not(.C--disabled),
.C--gettingCard .C--card:not(.C--unplayable),
.C--cardForceClickable {
    // the "click a card/button" state
    box-shadow: 0 0 0 4rem #8bd;
    cursor: pointer;

    &:hover{
        box-shadow: 0 0 0 4rem #e8f;
    }
}

/* floating ui elements */
.C--passButton{
    position: absolute;
    right: 10rem;
    bottom: 310rem;
    z-index: 30;
}

.C--resources{
    position: absolute;
    left: 10rem;
    bottom: 310rem;
    z-index: 9;
}
    .C--actionPointRow, .C--manaRow {
        margin-top: 15rem;
        display: flex;
        flex-direction: row;
        height: 35rem;

        &>div:before{
            box-shadow: 0 0 0 6rem #fffa;
        }
    }


.C--minimap{
    display: flex;
    flex-direction: column-reverse;
    align-items: center;
    position: absolute;
    inset: 40rem 20rem auto auto;
    font-family: monospace;
    white-space: pre;
    font-size: 15rem;
    color: #fff9;
    z-index: 55;
}
    .C--minimapRow{
        white-space: nowrap;
    }
    .C--visitedPath{
        color: #f0a;
    }

.C--directionChoiceLabel{
    font-size: 75%;
    margin-bottom: 10rem;
    width: 150rem;
}
